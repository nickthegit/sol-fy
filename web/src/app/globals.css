@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

*:where(
    :not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)
  ) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a,
button {
  cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol,
ul,
menu {
  list-style: none;
}

/* For images to not be able to exceed their container */
img {
  max-inline-size: 100%;
  max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input,
textarea {
  -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
  -webkit-appearance: revert;
  appearance: revert;
}

/* preformatted text - use only for this feature */
:where(pre) {
  all: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
  color: unset;
}

/* remove default dot (â€¢) sign */
::marker {
  content: initial;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable="false"])) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable="true"]) {
  -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
  all: revert;
}

.grid-12 {
  @apply grid grid-cols-12 gap-5;
}

.wrapper {
  @apply w-full px-5 mx-auto max-w-7xl;
}

.text-hero {
  font-size: responsive 42px 80px;
  line-height: responsive 42px 80px;
}

.text-hero-subtitle {
  font-size: responsive 36px 70px;
  line-height: responsive 36px 70px;
}

.text-btn {
  font-size: responsive 16px 20px;
  line-height: responsive 16px 20px;
  @apply font-bold;
}

.text-heading {
  font-size: responsive 28px 50px;
  line-height: responsive 28px 50px;
  @apply font-bold;
}

.text-subheading {
  font-size: responsive 20px 40px;
  line-height: responsive 20px 40px;
  @apply font-bold;
}

.text-heading-3 {
  font-size: responsive 28px 36px;
  line-height: responsive 28px 36px;
  @apply font-bold;
}

.text-cta {
  font-size: responsive 18px 26px;
  line-height: responsive 22px 30px;
}

.text-body-lg {
  font-size: responsive 18px 22px;
  line-height: responsive 21px 25px;
  @apply font-bold;
}

.text-body {
  font-size: responsive 16px 18px;
  line-height: responsive 19px 22px;
}

/* EMBLA */
.embla {
  overflow: hidden;
}
.embla__container {
  display: flex;
}
.embla__slide {
  flex: 0 0 100%;
  min-width: 0;
}

/* clipping */
.clip-triangle {
  position: absolute;
  clip-path: polygon(0 0, 50% 51%, 100% 100%, 0% 100%);
}

.proseSol h3 {
  @apply text-heading-3;
}
.proseSol h3 strong {
  @apply text-primary;
}

.statement h3 {
  @apply text-heading-3;
}
.statement p {
  @apply text-cta;
}
